{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Confirm.js","components/Appointment/Error.js","components/Appointment/index.js","hooks/useVisualMode.js","helpers/selectors.js","components/Application.js","hooks/useApplicationData.js","index.js"],"names":["DayListItem","props","dayClass","classNames","selected","spots","React","createElement","data-testid","className","onClick","setDay","name","concat","DayList","days","map","day","key","id","value","onChange","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","InterviewerListItem","interviewerClass","setInterviewer","avatar","InterviewerList","interviewers","Button","buttonClass","confirm","danger","disabled","children","Form","_useState","useState","_useState2","_slicedToArray","setStudent","_useState3","interviewerID","_useState4","_useState5","_useState6","error","setError","autoComplete","onSubmit","event","preventDefault","type","placeholder","target","onCancel","onSave","Status","message","Confirm","onConfirm","Error","onClose","Appointment","interview","_useVisualMode","initial","mode","setMode","history","setHistory","transition","newMode","replace","arguments","length","undefined","prev","_toConsumableArray","slice","back","useVisualMode","save","bookInterview","then","catch","err","cancelInterview","updateSpots","state","appointments","findDay","find","data","forEach","updatedDay","_objectSpread","Application","_useApplicationData","setState","useEffect","socket","WebSocket","process","REACT_APP_WEBSOCKET_URL","onopen","send","Promise","all","axios","get","_all","appointment","_defineProperty","put","delete","useApplicationData","dailyInterviewers","getInterviewersForDay","appointmentsList","getAppointmentsForDay","getInterview","Object","assign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe2d0b9a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"components/DayListItem.scss\";\nimport classNames from \"classnames\";\n\nexport default function DayListItem(props) {\n  const formatSpots = () => {\n    if (!props.spots) {\n      return `no spots remaining`;\n    }\n    if (props.spots === 1) {\n      return `${props.spots} spot remaining`;\n    }\n    return `${props.spots} spots remaining`;\n  };\n\n  const dayClass = classNames('day-list__item', {\n    'day-list__item--selected': props.selected,\n    'day-list__item--full': !props.spots\n  });\n\n  return (\n    <li\n      data-testid=\"day\"\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      selected={props.selected}\n    >\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots()}</h3>\n    </li>\n  );\n}","import React from \"react\";\n\nimport 'components/DayListItem';\nimport DayListItem from \"components/DayListItem\";\n\nexport default function DayList(props) {\n  \n  const days = props.days.map((day) => {\n    return (\n      <DayListItem\n        key={day.id}\n        name={day.name}\n        spots={day.spots}\n        selected={day.name === props.value}\n        setDay={props.onChange}\n      />\n    );\n  });\n\n  return (\n    <ul>\n      {days}\n    </ul>\n  );\n}","import React from 'react';\n\nexport default function Header(props) {\n\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n\n  );\n}","import React from 'react';\n\nexport default function Show(props) {\n\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">{props.interviewer.name}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n}","import React from 'react';\n\nexport default function Empty(props) {\n\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n\n  );\n}","import React from \"react\";\n\nimport \"components/InterviewerListItem.scss\"\n\nimport classNames from \"classnames\";\n\nexport default function InterviewerListItem(props) {\n\n  const interviewerClass = classNames('interviewers__item', {\n    'interviewers__item--selected': props.selected\n  });\n\n  return (\n    <li\n      className={interviewerClass}\n      onClick={props.setInterviewer}\n    >\n      <img\n        className=\"interviewers__item-image\"\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n}","import React from \"react\";\n\nimport \"components/InterviewerList.scss\";\n\nimport InterviewerListItem from \"./InterviewerListItem\";\n\nexport default function InterviewerList(props) {\n  const interviewers = props.interviewers.map((interviewer) => {\n    return (\n      <InterviewerListItem\n        key={interviewer.id}\n        name={interviewer.name}\n        avatar={interviewer.avatar}\n        selected={interviewer.id === props.value}\n        setInterviewer={() => props.onChange(interviewer.id)}\n      />\n    );\n  });\n  return (\n    <section className=\"interviewers\">\n      <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n      <ul className=\"interviewers__list\">\n        {interviewers}\n      </ul>\n    </section>\n  );\n}","import React from \"react\";\n\nimport \"components/Button.scss\";\nimport classNames from \"classnames\";\n\nexport default function Button(props) {\n  const buttonClass = classNames('button', {\n    'button--confirm': props.confirm,\n    'button--danger': props.danger\n  });\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\n\nimport InterviewerList from 'components/InterviewerList';\nimport Button from 'components/Button';\n\nexport default function Form(props) {\n  const [student, setStudent] = useState(props.student || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewerID || null);\n  const [error, setError] = useState(\"\");\n\n  const reset = () => {\n    setStudent(\"\");\n    setInterviewer(null);\n  };\n  const cancel = () => {\n    reset();\n    props.onCancel();\n  };\n\n  const validate = () => {\n    if (!student) {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    if (!interviewer) {\n      setError(\"Please select an interviewer\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(student, interviewer);\n  };\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={student}\n            onChange={(event) => {\n              setStudent(event.target.value);\n              setError(\"\");\n            }}\n            data-testid=\"student-name-input\"\n          />\n        </form>\n        {(!student || !interviewer) &&\n        <section className=\"appointment__validation\">{error}</section>}\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>Cancel</Button>\n          <Button confirm onClick={validate}>Save</Button>\n        </section>\n      </section>\n    </main>\n  );\n}","import React from 'react';\n\nexport default function Status(props) {\n\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n\n  );\n}","import React from \"react\";\n\nimport Button from \"components/Button\";\n\nexport default function Confirm(props) {\n\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>Cancel</Button>\n        <Button danger onClick={props.onConfirm}>Confirm</Button>\n      </section>\n    </main>\n  );\n}","import React from 'react';\n\nexport default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n}","import React from \"react\";\n\nimport './styles.scss';\n\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\nimport Error from \"./Error\";\n\nimport useVisualMode from \"hooks/useVisualMode\";\n\nexport default function Appointment(props) {\n  const interview = props.interview;\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETE = \"DELETE\";\n  const CONFIRM = \"CONFIRM\";\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = \"ERROR_SAVE\";\n  const ERROR_DELETE = \"ERROR_DELETE\";\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  const save = (name, interviewer) => {\n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    transition(SAVING);\n\n    props.bookInterview(props.id, interview)\n      .then(() => transition(SHOW))\n      .catch(err => transition(ERROR_SAVE, true));\n\n  };\n\n  const remove = () => {\n    transition(DELETE, true);\n\n    props.cancelInterview(props.id)\n      .then(() => transition(EMPTY))\n      .catch(err => transition(ERROR_DELETE, true));\n  };\n\n  return (\n    <article className=\"appointment\" data-testid=\"appointment\" >\n      <Header time={props.time} />\n      {mode === SHOW && (\n        <Show\n          student={interview.student}\n          interviewer={interview.interviewer}\n          onEdit={() => transition(EDIT)}\n          onDelete={() => transition(CONFIRM)}\n        />\n      )}\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === CREATE &&\n        <Form\n          interviewers={props.interviewers}\n          onCancel={back}\n          onSave={save}\n        />\n      }\n      {mode === SAVING && <Status message={\"Saving\"} />}\n      {mode === DELETE && <Status message={\"Deleting\"} />}\n      {mode === CONFIRM &&\n        <Confirm\n          message={\"Are you sure to cancel this appointment?\"}\n          onCancel={back}\n          onConfirm={remove}\n        />\n      }\n      {mode === EDIT &&\n        <Form\n          student={interview.student}\n          interviewerID={interview.interviewer.id}\n          interviewers={props.interviewers}\n          onCancel={back}\n          onSave={save}\n        />\n      }\n      {mode === ERROR_SAVE &&\n        <Error\n          message={\"Could not save the appointment\"}\n          onClose={back}\n        />\n      }\n      {mode === ERROR_DELETE &&\n        <Error\n          message={\"Could not cancel the appointment\"}\n          onClose={back}\n        />\n      }\n    </article>\n  );\n}","import { useState } from \"react\";\n\nexport default function useVisualMode(initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  function transition(newMode, replace = false) {\n    setMode(newMode);\n    if (replace) {\n      setHistory((prev) => {\n        return [...prev.slice(0, -1), newMode];\n      })\n    } else {\n      setHistory((prev) => {\n        return [...prev, newMode]\n      });\n\n    }\n    \n  }\n\n  function back() {\n    // set limit that it will not pass initial mode\n    if (history.length > 1) {\n      // remove the last mode in history\n      setHistory((prev) => {\n        const newHistory = prev.slice(0, prev.length - 1);\n        return newHistory;\n      });\n      setMode(history[history.length - 2]);\n\n    }\n\n  }\n\n  return { mode, transition, back };\n\n}\n\n","export function getAppointmentsForDay(state, day) {\n  //... returns an array of appointments for that day\n  if (!day) return [];\n\n  const findDay = state.days.find(\n    data => data.name === day);\n\n  if (!findDay) return [];\n\n  const appointments = findDay.appointments.map((id) => {\n    return state.appointments[id];\n  });\n\n  return appointments;\n}\n\nexport function getInterview(state, interview) {\n  if (!interview) return null;\n\n  const scheduledInterview = {\n    interviewer: state.interviewers[interview.interviewer],\n    student: interview.student\n  };\n\n  return scheduledInterview;\n}\n\nexport function getInterviewersForDay(state, day) {\n  //... returns an array of appointments for that day\n  if (!day) return [];\n\n  const findDay = state.days.find(\n    data => data.name === day);\n\n  if (!findDay) return [];\n\n  const interviewers = findDay.interviewers.map((id) => {\n    return state.interviewers[id];\n  });\n\n  return interviewers;\n}\n\nexport function updateSpots(state, appointments) {\n  const findDay = state.days.find(\n    data => data.name === state.day);\n\n  let spots = 0;\n\n  findDay.appointments.forEach(id => {\n    if (!appointments[id].interview) {\n      spots++;\n    }\n  });\n\n  const updatedDay = { ...findDay, spots };\n  return state.days.map(data => data.name === state.day ? updatedDay : data);\n};","import React from \"react\";\n\nimport \"components/Application.scss\";\n\nimport DayList from \"components/DayList\";\nimport Appointment from \"./Appointment\";\nimport {\n  getAppointmentsForDay,\n  getInterview,\n  getInterviewersForDay\n} from \"helpers/selectors\";\n\nimport useApplicationData from \"hooks/useApplicationData\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  } = useApplicationData();\n\n  const dailyInterviewers = getInterviewersForDay(state, state.day);\n\n  const appointmentsList = getAppointmentsForDay(state, state.day)\n    .map((appointment) => {\n\n      const interview = getInterview(state, appointment.interview);\n\n      return (<Appointment\n        key={appointment.id}\n        {...appointment}\n        interview={interview}\n        interviewers={dailyInterviewers}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n      />);\n    });\n\n\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList\n            days={state.days}\n            value={state.day}\n            onChange={setDay}\n          />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        <section className=\"schedule\">\n          {appointmentsList}\n          <Appointment key=\"last\" time=\"5pm\" />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { updateSpots } from \"helpers/selectors\";\n\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {}\n  });\n  const setDay = (day) => setState({ ...state, day });\n\n  useEffect(() => {\n    const socket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n    socket.onopen = (event) => {\n\n      socket.send(\"ping\");\n    };\n    \n    Promise.all([\n      axios.get(\"/api/days\"),\n      axios.get(\"/api/appointments\"),\n      axios.get(\"/api/interviewers\")\n    ]).then((all) => {\n      const [days, appointments, interviewers] = all;\n      setState(prev => ({ ...prev, days: days.data, appointments: appointments.data, interviewers: interviewers.data }));\n    });\n  }, []);\n  \n  const bookInterview = (id, interview) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n\n    return axios.put(`/api/appointments/${id}`, { interview })\n      .then(() => {\n        const days = updateSpots(state, appointments);\n        setState(prev => ({ ...prev, days, appointments }));\n      });\n  };\n\n  const cancelInterview = (id) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n\n    return axios.delete(`/api/appointments/${id}`)\n      .then(() => {\n        const days = updateSpots(state, appointments);\n        setState(prev => ({ ...prev, days, appointments }));\n      });\n  };\n\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}